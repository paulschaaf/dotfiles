#!/bin/zsh

outfile=/dev/stdout
changed=false
debug=false
force=false
zcompletionDir=~/dotfiles/etc/zshfunctions

# Command-line Switches. Add a # directly after the paren to include the switch in the generated zcompletion
while [ -n "$*" ]; do
  case $1 in
    --debug)# print debugging info
      debug=true
      ;;
#    --dry-run)# Print the commands that will be run, but to not run them
#      # shellcheck disable=SC2034 # unused
#      _dry_run='echo '
#      ;;
    --changed)# update for all changed files in ~/bin
      changed=true
      ;;
    --force)# forcibly update the file in $PWD
      force=true
      ;;
    --setx)# run "set -x" once this switch is parsed
      set -x
      ;;
    --*)
      echo Unknown option $1
      return 1
      ;;
    *)
      break
      ;;
  esac
  shift
done

scripts=()

if $changed; then
  echo '== Using changed scripts'
  scripts=($(git diff --name-only | grep '\bbin'))
else
  scripts="$@"
fi

if ((! $#scripts)); then
  echo 'Nothing to do!'
  exit
fi

for script in $scripts; do
  if [[ ! -f ${script} ]]; then
    echo "Script not found: ${script}"
    exit 1
  fi

  scriptShortName=$(basename ${script})
  outfile_name=$zcompletionDir/_${scriptShortName}
  $force && outfile=${outfile_name}

  # Extract lines suitable for entry in a zcompletion file:
  # 1. grab every line that has a ')' char directly followed by a # (a commented switch line in a case statement)
  # 2. filter out any that are commented out
  # 3. standardize the leading whitespace, single-quote what's left
  # 4. escape any double quotes and put three backslashes before every dollar sign
  switches=$(sed -n 's/[)]# */: /p' ${script} | grep -v '^ *#' | sed "s/^ *\(.*\)/  '\1'/; s/: *'/'/" | sed 's/"/\\"/g; s/[$]/\\\\\\\$/g' | sort)

  if ((!$#switches)); then
    echo No switches found for $0
    exit 1
  fi

  if ! ${force}; then
    echo -n '\nUse --force to '
    [[ -f ${outfile_name} ]] && echo -n overwrite || echo -n create
    echo " $outfile_name with the following:\n"
  fi

  cat <<__EOF >| $outfile
#compdef $scriptShortName
# This file was generated using '$(basename $0) $script'

_arguments "*: :((
${switches}
))"
__EOF

  if ${force}; then
    git diff $outfile
  fi
done
