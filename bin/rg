#!/bin/zsh
# list all file extensions:
#   find * -type f -printf '%f\n' | sed -n '/\./ { s/^.*\.//g; p; }' | sort -u | tee extensions

export debug expanded
binary=$([ -f /usr/local/bin/rg ] && echo /usr/local/bin/rg || echo /usr/bin/rg)

function help() {
   $binary --help
   echo
   echo 'GUIDEWIRE MACRO IGNORE FLAGS:                 WILL IGNORE'
   echo '     --ignore-test-dirs                       /test/, /gtest/, /apitestbench/, /testharness/, etc.'

   echo
   echo 'EXTENSION TYPES (use with --type= or --type-not=)'
   echo '     eti, eix, etx, gr, grs, gs, gsx, pcf, tix, tti, ttx'
   echo
   echo 'FILE TYPES (use with --type= or --type-not=)  INCLUDES TYPES'
   echo '     datamodel:                               entity, typelist'
   echo '     displayprops:                            display*.properties'
   echo '     entity:                                  eti, eix, etx'
   echo '     gosu:                                    gs, gsx'
   echo '     gosurules:                               gr, grs'
   echo '     plugin:                                  *.gwp'
   echo '     src:                                     gosu, java'
   echo '     typeinfo:                                *.gti'
   echo '     typelist:                                tti, tix, ttx'
   echo '     ui:                                      displayprops, pcf'
   echo
   exit
}

command=()
function addSwitches() {
   # shellcheck disable=SC2034
   for switch in "${@}"; do
      command+=("${switch}")
   done
}

function addGlobs() {
   # shellcheck disable=SC2034
   for pattern in "${@}"; do
      addSwitches --glob "${(qq)pattern}"
   done
}

(($#inIntelliJ)) && addSwitches --color=always

args=($@)
while (($#args)); do
   #   (($#debug)) && echo -n '\n=== ' && typeset args
   firstArg=${args[1]}
   args=(${args[@]:1}) # pop the argument

   #   (($#debug)) && typeset firstArg
   case ${firstArg} in
      --debug)
         debug=true
         ;;
      --heading)
         addSwitches --heading --color=never
         expanded=true
         ;;
      -h|--help)
         help
         ;;
      --ignore-test-dirs)
         addGlobs '!**/*-test*/'     '!**/apitestbench*/'  '!**/gtest/'   '!**/pcftest/' \
                  '!**/servertest/'  '!**/smoketests/'     '!**/test-*/'  '!**/test/'    \
                  '!**/testdata/'    '!**/testharness/'    '!**/tests/'   '!**/testsupport/'
         expanded=true
         ;;
      -*)
         # don't enquote switches
         addSwitches "${firstArg}"
         ;;
      *)
         addSwitches "${(qq)firstArg}"
         ;;
   esac
done

(($#expanded)) && printf "Expanded to => %s %s\n"  "${binary}" "${command[*]}"
if (($#inIntelliJ)); then
   (($#debug)) && set -x
   # insert a space between the column number and the matching text
   eval ${binary} ${command[*]} | sed -E 's_(:.[[]0m[0-9]+.[[]0m:)_\1 _' | toFileUrl
else
   (($#debug)) && set -x
   eval ${binary} ${command[*]}
fi
