#!/bin/zsh
# list all file extensions:
#   find * -type f -printf '%f\n' | sed -n '/\./ { s/^.*\.//g; p; }' | sort -u | tee extensions

export debug expanded
binary=$([ -f /usr/local/bin/rg ] && echo /usr/local/bin/rg || echo /usr/bin/rg)

function help() {
   cat <<HEREDOC
GUIDEWIRE MACRO IGNORE FLAGS:           WILL IGNORE
     --ignore-bizrules                  /bizrules/*.xml
     --ignore-test-dirs                 /test/, /gtest/, /apitestbench/, /testharness/, etc.


EXTENSION TYPES (use with --type= or --type-not=)
     eix, eti, etx, feature, gr, grs, gs, gsx, gwrules, pcf, tix, tti, ttx, wsdl, xsd

PATTERN TYPES                           PATTERN
     builder:                           *Builder*
     displaykey:                        display*.properties
     dktranslations:                    display_*.properties
     gosutest:                          *Test.gs
     javatest:                          *Test.java
     plugin:                            *.gwp
     ruleorder:                         order.txt
     tktranslations:                    typelist*.properties

COMPOSITE TYPES                         INCLUDES TYPES
     datamodel:                         entity, typelist
     entity:                            eti, eix, etx
     gosu:                              gs, gsx
     gosurules:                         gr, grs, ruleorder
     src:                               gosu, java
     test:                              feature, gosutest, javatest
     translations:                      dktranslations, tktranslations
     typelist:                          tti, tix, ttx
     ui:                                displaykey, pcf, tktranslations, locale

HEREDOC
   exit
}

command=()

function addSwitches() {
   # shellcheck disable=SC2034
   for switch in "${@}"; do
      command+=("${switch}")
   done
}

function addGlobs() {
   # shellcheck disable=SC2034
   for pattern in "${@}"; do
      addSwitches --glob "${(qq)pattern}"
   done
   expanded=true
}

function typeNot() {
   # shellcheck disable=SC2034
   for pattern in "${@}"; do
      addSwitches --type-not "${pattern}"
   done
   expanded=true
}

args=($@)
typeNot translations xsd xsl
(($#inIntelliJ)) && addSwitches --color=always

while (($#args)); do
   #   (($#debug)) && echo -n '\n=== ' && typeset args
   firstArg=${args[1]}
   args=(${args[@]:1}) # pop the argument

   #   (($#debug)) && typeset firstArg
   case ${firstArg} in
      --debug)
         debug=true
         ;;
      --heading)
         addSwitches --heading --color=never
         expanded=true
         ;;
      -h|--help)
         $binary --help
         help
         ;;
      --ignore-bizrules)
         addGlobs '!**/bizrules/*.xml'
         ;;
      --ignore-test-dirs)
         addGlobs '!**/*-test*/'     '!**/apitestbench*/'  '!**/gtest/'     '!**/pcftest/' \
                  '!**/servertest/'  '!**/smoketests/'     '!**/test-*/'    '!**/test/'    \
                  '!**/testdata/'    '!**/testharness/'    '!**/tests/'     '!**/testsupport/'
         ;;
      --type-list)
         ${binary} --type-list
         exit
         ;;
      -*)
         # don't enquote switches
         addSwitches "${firstArg}"
         ;;
      *)
         addSwitches "${(qq)firstArg}"
         ;;
   esac
done

(($#expanded)) && printf "\e[90mExpanded to => %s %s\n"  "${binary}" "${command[*]}\e[0m"
if (($#inIntelliJ)); then
   (($#debug)) && set -x
   # insert a space between the column number and the matching text
   eval "${binary} ${command[*]}" | sed -E 's_(:.[[]0m[0-9]+.[[]0m:)_\1 _' | toFileUrl
else
   (($#debug)) && set -x
   eval ${binary} ${command[*]}
fi
