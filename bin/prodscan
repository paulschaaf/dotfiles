#!/usr/bin/env zsh
suite=(ab bc cc pc px)
allProducts=(${suite} ccpi)
typeset -A selectedProducts

switches=()
alias dry_run=false
root=~/gw
while [[ -n "$*" ]]; do
  switch=${1%%=*}
  [[ ${1} =~ "=" ]] && value=${1#*=} || value=''
  (($#debug)) && echo "Processing switch '$switch', value '$value'"
  case ${switch} in
    --debug)# print debugging info
      debug=true
      ;;
    --dry-run)# Print the commands that will be run, but to not run them
      alias dry_run=true
      ;;
    --all)# include all defined products (suite + ccpi)
      for product in $allProducts; do
        selectedProducts[$product]=$product
      done
      ;;
    --suite)# include ab, bc, cc, pc, and px
      for product in $suite; do
        selectedProducts[$product]=$product
      done
      ;;
    --root)# override the default installation root
      root=$value
      ;;
    --setx)# run "set -x" once this switch is parsed
      set -x
      ;;
    -*)
      product=${switch##--}
      # shellcheck disable=SC1073 # couldn't parse
      # shellcheck disable=SC1072 # fix any mentioned problems
      if (($allProducts[(Ie)$product])); then # if it's a product
        # either add the product (e.g. "--ab"), or override the assumed directory (e.g. "--cc=cc2")
        value=${value//\~/$HOME}
        selectedProducts[$product]=${value:-$product}
        (($#debug)) && typeset -p selectedProducts
      else # it's a normal switch
        switches+=(${1})
      fi
      ;;
    *) # it's a normal argument
      break
      ;;
  esac
  shift
done

# These are listed so they can be extracted by extractCompdef
: <<HERE
    --ab)# include AB, add an equals sign to override the assumed subdirectory
    --bc)# include BC, add an equals sign to override the assumed subdirectory
    --cc)# include CC, add an equals sign to override the assumed subdirectory
    --pc)# include PC, add an equals sign to override the assumed subdirectory
    --px)# include PX, add an equals sign to override the assumed subdirectory
HERE

# default associative array to cc and px
(($#selectedProducts)) || selectedProducts=(cc cc px px)
(($#debug)) && typeset -p selectedProducts
for prod prodDir in "${(@kv)selectedProducts}"; do
  [[ $prodDir =~ "^/" ]] || prodDir=${root:=.}/${prodDir}
  cd $prodDir
  source ~/bin/gwenv ""

  name="${GW_APPNAME} ${GW_VERSION}"
  width=$(($COLUMNS - $#name - 4)) # don't count zero-width chars

  command=(rg --color=never ${switches} ${*} $prodDir)

  if (($#debug)); then
    echo "\n==="
    typeset -p command name prod prodDir
    prodDir="[7m${command}"
    width=$(($width + 4)) # another set of zero-width chars
  fi

  printf "\n${GW_ANSI_NAME//$GW_APPNAME/$name%${width}s}\n" ${prodDir//$HOME/\~}

  dry_run || $command || echo
done