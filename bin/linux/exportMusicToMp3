#!/bin/zsh

srcRoot=~/data/Music
destRoot=~/data/soundKonverter/Music

alias TEST_MODE=false
alias TRACE=false

######################################################
# process command line arguments
while [ -n "$*" ]; do
  case $1 in
    --debug)#
      # shellcheck disable=SC2034
      debug=true
      ;;
    --dry-run)# Print the commands that will be run, but do not actually run them
      # shellcheck disable=SC2034 # unused
      _dry_run='echo '
      ;;
    --destRoot)
      destRoot="$2"
      shift
      ;;
    --srcRoot)
      srcRoot="$2"
      shift
      ;;
    --setx)
      set -x
      ;;
    --test)
      cd ~/tmp || exit 1
      srcRoot=${PWD}/src
      destRoot=${PWD}/dest
      test=(${srcRoot} ${destRoot})

      mkdir -p {${srcRoot},${destRoot}}/{Blues,Rock} ${destRoot}/Jazz

      touch {${srcRoot},${destRoot}}/Blues/identical\[file\].flac

      touch  ${srcRoot}/Rock/existing\[file\]\'.flac
      touch ${destRoot}/Rock/existing\[file\].mp3

      touch ${srcRoot}/{Blues,Rock}/added\(file\).flac
      touch ${destRoot}/{Jazz,Rock}/orphaned\ -\ \'file\"name.mp3

      alias TEST_MODE=true
      ;;
    --trace)
      alias TRACE=true
      ;;
    --*)
      echo Illegal switch "$1"!
      exit 1
      ;;
    *)
      break
      ;;
  esac
  shift
done

function log() {
  echo
  level=$1; shift
  case $level in
    1)
      echo -n "\e[46m"
      ;;
    2)
      echo -n "   \e[96m"
      ;;
    3)
      echo -n "      \e[36m"
      ;;
    *)
      echo -n "---"
      ;;
    esac
  echo "$*\e[0m"
}

function showTree() {
  echo "\n---------"
  tree -n --noreport ${srcRoot} ${destRoot}
  echo
}

######################################################
log 1 Convert FLAC to MP3 if missing
cd ${srcRoot} || exit 1
#fd --type file --extension flac --exec convertToMp3
for src in **/*.flac; do
    TRACE && showTree
    dest="${destRoot}/${src%.flac}.mp3"
#    TRACE && typeset src dest
    if [[ -n $(ls "${dest%.*}".*) ]]; then
      TRACE && log 2 "Already converted \e[4m'$src'\e[24m"
    else
      log 2 "Converting \e[4m'$src'\e[24m"
      destDir=$(dirname ${dest})
      cmd="mkdir -p \"${destDir}\"; ffmpeg -i \"${src}\" -q:a 2 \"${dest}\""

      echo $cmd

      # shameful hack to silently swap the command when in test mode
      TEST_MODE && cmd="cp '${src}' '${dest}'" && TRACE && log 3 "Replacing 'ffmpeg' with 'cp' due to test mode"

      (($#_dry_run)) || eval $cmd
    fi
done

######################################################
log 1 Copy M4A, M4P, MP3, and MP4 files if missing
for src in **/*.{m4a,m4p,mp3,mp4}; do
    TRACE && showTree
    dest="${destRoot}/${src}"
    if [[ -f "${dest}" ]]; then
      TRACE && log 2 "Already copied \e[4m'$src'\e[24m"
    else
      log 2 "Copying \e[4m'$src'\e[24m"
      destDir=$(dirname ${dest})
      cmd="mkdir -p \"${destDir}\"; cp \"${src}\" \"${dest}\""

      echo $cmd

      (($#_dry_run)) || eval $cmd
    fi
done

######################################################
log 1 'Delete orphaned MP3s (no corresponding file in src)'
cd ${destRoot} || exit 1

for dest in **/*.mp3; do
    TRACE && showTree
    srcFileSpec=${srcRoot}/${dest%.*}
#    src=$(fd --max-depth 1 "^${srcFileSpec##*/}" ${srcFileSpec%/*})
#    TRACE && typeset srcFileSpec src
    if [[ -n $(ls "${srcFileSpec}".*) ]]; then
      TRACE && log 2 "Keeping \e[4m'$(basename ${dest})'\e[24m"
    else
      log 2 "Deleting \e[4m'${destRoot}/${dest}'\e[24m"
      eval $_dry_run rm "${destRoot}/${dest}"
    fi
done

TRACE && showTree

######################################################
log 1 "Removing empty directories from \e[4m'file://${destRoot}'\e[24m"

for dir in ${srcRoot} ${destRoot}; do
  log 2 "... from \e[4m'${dir}'\e[24m"
  eval $_dry_run find ${dir} -type d -empty -exec rmdir -pv {} + &>/dev/null
done

set +x
TRACE && showTree
if TEST_MODE; then
  log 1 Cleaning up tests
  log 2 Removing test files
  find ${test} -type f -empty -exec rm {} +
  log 2 Removing test directories
  find ${test} -type d -empty -exec rmdir -p {} + &>/dev/null
  true ## don't propagate any error from the previous command
fi