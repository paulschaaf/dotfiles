#!/usr/bin/env ruby

# $Source: /home/pschaaf/bin/usr-local-bin/diffd,v $
# $Revision: 1.1 $
# $Date: 2005/03/02 21:36:04 $
# $Author: pschaaf $
# $State: Exp $
# $Name:  $

# todo: ignore CVS directories

divider='------------------------------------------------------------'
none_string='    ?'
dirs = ARGV
$column_count=dirs.size
$gutter='   '
$columns=ENV['COLUMNS'].to_i
$columns=80 if $columns == 0

$column_width = ($columns - $gutter.size*($column_count-1)) / $column_count

$format_string = ("%-#{$column_width}.#{$column_width}s".to_a * $column_count).join($gutter) + "\n"
# %-#{$column_width}.#{$column_width}s\n"

$none=none_string
# $none=sprintf("%#{$column_width/2 - none_string.length}s%s", ' ', none_string)

def $none.<=>(other)
  1
end

class TrueClass
  def <(other)
    self
  end
  def >(other)
    self
  end
end

class FalseClass
  def <(other)
    self
  end
  def >(other)
    self
  end
end

class NilClass
  def <=>(other)
    1
  end
end

class String
  alias_method :old_compare, :<=>
  def <=>(other)
    if other == $none
      -(other <=> self)
    else
      old_compare(other.to_s)
    end
  end
end

class Row < Array
  def differs?
    self.detect {|e| e != self.first}
  end

  def output
    super if self.differs?
  end
end

files = Hash.new {|aHash, key| aHash[key] = Row.new(dirs.size, $none)}

class Object
  def output
    self.to_s.output
  end
end

class String
  def output
    (self.to_a * $column_count).output
  end
end

class Array
  def output
    puts sprintf($format_string, *self)
  end
end

class Hash
  def output
    sorted = self.values.sort!
    sorted.each {|e| e.output}
  end
end

dirs.inject(0) {|index, dir|
  (`cd #{dir.chomp}; find . -type f -print0 | xargs -0 md5sum`).each {|e|
    hash, name = *e.chomp.split(/\s+/)
    # p e
    # p [hash, name]
    (files[hash])[index] = name.chomp[3..-1]
  }
  index + 1
}

dirs.output
divider.output
files.output
