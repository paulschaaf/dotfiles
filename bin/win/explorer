#!/bin/bash

dry_run=''
select=''
select_full=''
trace=:

show_usage () {
    cat <<EOF
 `basename $0` [switches] [dir]

 Open a Windows Explorer focused on directory dir (defaults to the current
 directory).

   -e                 Explore - Show the tree hierarchy in the left pane.
                      Ineffective on Windows 7.

   --echo, --dry-run  Echoes the cmd.exe translation of the invocation.

   -h, --help         Show this help screen.

   --root             Explore from here - Make the target dir the root of the
                      directory tree for this window. This implies -e.

   --trace            Trace the execution

   --select=x         Pre-select item x in the target dir.
EOF
}

#set -x
# parse switches
for x in ${@}; do
    case ${x} in
        -h|--help)
            show_usage
            exit
            ;;
        -e)
            args=/e${args:+,$args}
            ;;
        --echo|--dry-run)
            dry_run=true
            ;;
        --select=*)
            # remove everything up to the '='
            select=${x#*=}
            ;;
        # --select*)
        #     # select=$*
        #     select_full=true
        #     ;;
        --root)
            args="/e,${args:+$args,}/root"
            ;;
        --trace)
            trace="echo '-----'"
            ;;
        --)
            shift
            break
            ;;
        #         --*)
        #             args=${args:+$args,}/${x:2}
        #             ;;
        -*)
            echo Error: unrecognized switch: $x
            echo
            show_usage
            exit 1
            ;;
        *)
            break
            ;;
    esac
    shift
done
if [[ "$trace" != ":" ]]; then
  set -x
fi

$trace expand the path
# echo "\$@='${@}'"
if [ "$@" ]; then
    $trace check @
    dir="`cygpath -au "${@}"`"

    $trace if this is a shortcut, convert it to the referenced file
    if [ `readshortcut ${dir} 2>/dev/null` ]; then
      dir=`readshortcut ${dir}`
    fi

    $trace If this is a file and not a shortcut, focus on parent and select it
    if [ -f "${dir}" ] && [ ! `readshortcut ${dir} 2>/dev/null` ]; then
       $trace set dir and select variables
       eval `find "${dir}" -printf 'dir="%h"; select="%p"'`
    fi

    $trace check dir
    dir=`cygpath -aw "${dir}"`
    $trace dir is ${dir}
fi

if [ -n "$select" ]; then
    $trace check select
    select=`cygpath -aw "${select}"`
    $trace select is $select
fi

#dir=`cygpath -aw "${dir:-.}" | sed 's/cygwin\\\\home/Users/g'`

args=${args//,\/e/}     # strip duplicate /e's
$trace args=${args}

# if [ -n "$select_full" ]; then
#     args=${args}/select,${dir}
# el
if [ -n "$select" ]; then
    args=${args}/select,${select}
    $trace "selecting '"$select"'"
else
    args=$args${args:+,}${dir:-.}
fi

echo explorer.exe ${args} \&
if [ -z "$dry_run" ]; then
    run explorer.exe ${args}
fi
