#!/bin/zsh

#
# FUNCTIONS
#

if [[ "$1" == "--trace" || "$1" == "--debug" ]]; then
  shift
  function trace() {
    echo "[45m# $*[0m"
  }
  alias TRACE=true
else
  function trace() {
    :
  }
  alias TRACE=false
fi

[[ "$1" == "--setx" ]] && set -x

function unsetGWVars() {
  trace "We've just moved outside of any GW install, so unset every var named GW_*:"
  for var in $(env | grep ^'GW_' | cut -d '=' -f 1); do
    unset -v "$var"
    trace "   ... $var"
  done
}

function announce() {
  printf "\e[93m%s\e[0m\n" "${@}"
}

# shellcheck disable=SC1036
# shellcheck disable=SC1088
function ‚≠ë‚≠ë‚≠ë() {
  echo
  pastel -f paint -n white --on teal "${@}"
  echo
}

function echoDirNameIn() {
  [[ "$1" = "--allow-empty" ]] && shift && ignore=true
  for dirName in "${@}"; do
    if ((! $#dirName)); then
      echo $dirName is \$$dirName
      echo Error: "\$${dirName} is undefined!"
      exit 1
    fi
    eval value=\$${dirName}
    # shellcheck disable=SC2154 # referenced but not assigned
    if [[ -d "$value" ]]; then # echo its a directory
      echo -n 'üìÅ '
    elif [[ -f "$value" ]]; then # echo its a file
      echo -n '‚úì '
    else # echo its neither
      (($#ignore)) && echo -n '? ' || echo -n '‚ùå '
    fi
    typeset -p ${dirName}
  done
}

function replaceInList() {
  local listName=$1; shift
  local regex=$1;    shift
  local newVal=$1;   shift

  local list newList
  eval list=\$$listName
  newList=$(echo :"${list// /\\ }" | sed -E "s~:[^:]+(/${regex})[^:]*~~g; s~^:~${newVal}:~")
  export "${listName}"="$newList"
}


#
# DETERMINE THE PRODUCT
#
‚≠ë‚≠ë‚≠ë Detected Installation
# shellcheck disable=SC1090 # can't follow non-constant source
source ~/bin/gwenv --all


#
# SET THE JDK AND PLATFORM CONFIGURATION
#

case ${GW_PLATFORM} in
#  athena|bedrock|carbon|diamond)
#    export AARDVARK_HOME=/depot/aardvark/alpha
#    export ANT_HOME=/depot/ant/apache-ant-1.7.1
#    export GW_LIB_DIR=../lib
#    export GW_START_SCRIPT=./all
#    export JAVA_HOME=/usr/lib32/jvm/jdk1.6.0_45
#    export M2_HOME=/depot/maven/apache-maven-2.2.1
#    ;;
#  emerald)
#    export AARDVARK_HOME=/depot/aardvark/alpha
#    export ANT_HOME=/depot/ant/apache-ant-1.8.2
#    export GW_LIB_DIR=../lib
#    export GW_START_SCRIPT=./all
#    export IDEA_HOME=/opt/idea_emerald
#    export IDEA_JDK=/usr/lib32/jvm/java-7-jdk
#    export JAVA_HOME=/usr/lib/jvm/java-7-jdk
#    export M2_HOME=/depot/maven/apache-maven-3.0.4
#    ;;
  ferrite)
    export IDEA_HOME='/Applications/IntelliJ IDEA 15.app/Contents'
    export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home
    ;;
  granite)
    case ${GW_PL_VERSION} in
      10.0.0*|10.0.1)
        # for <= 10.0.1
        announce 'Using older config for this platform version'
        export IDEA_HOME='/Applications/IntelliJ IDEA 2017.app/Contents'
        export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home
        export JAVA_HOME=/usr/lib/jvm/java-8-jdk
        ;;
      *)
        export IDEA_HOME='/Applications/IntelliJ IDEA 2021.1.3 CE.app/Contents'
        export JAVA_HOME=/Library/Java/JavaVirtualMachines/amazon-corretto-11.jdk/Contents/Home
        ;;
    esac
    export GW_DB_DIR=/tmp/guidewire/granite
    ;;
  halite)
    export IDEA_HOME='/Applications/IntelliJ IDEA 2019.3.5 CE.app/Contents'
    export JAVA_HOME=/Library/Java/JavaVirtualMachines/amazon-corretto-11.jdk/Contents/Home
    export GW_DB_DIR=/tmp/guidewire/granite
    ;;
  Aspen|Banff|Cortina) # the cutoff between C and D may be incorrect
    export IDEA_HOME='/Applications/IntelliJ IDEA 2019.3.5 CE.app/Contents'
    export JAVA_HOME=/Library/Java/JavaVirtualMachines/amazon-corretto-11.jdk/Contents/Home
    export GW_DB_DIR=/tmp/guidewire/granite
    ;;
  Dobson|Elysian|Flaine|Garmisch|Hakuba)
    export IDEA_HOME='/Applications/IntelliJ IDEA 2021.1.3 CE.app/Contents'
    export JAVA_HOME=/Library/Java/JavaVirtualMachines/amazon-corretto-11.jdk/Contents/Home
    ;;
  Innsbruck)
    export IDEA_HOME='/Applications/IntelliJ IDEA 2022.3.3 CE.app/Contents'
    export JAVA_HOME=/Library/Java/JavaVirtualMachines/amazon-corretto-11.jdk/Contents/Home
    export GW_DB_DIR=./tmp/test
    ;;
  *)
    echo Unknown GW_PLATFORM \"$GW_PLATFORM\"
    exit 1
    unsetGWVars
    ;;
esac


#
# Source environment overrides
#

for env in {../..,..,.}/gw.env; do
  if [[ -f ${env} ]]; then
    ‚≠ë‚≠ë‚≠ë "** Applying overrides from ${env}"
    cat ${env} | sed 's/^/  - /'
    # shellcheck disable=SC1090 # can't follow non-constant source
    source ${env}
  fi
done


‚≠ë‚≠ë‚≠ë Java
echoDirNameIn JAVA_HOME
${JAVA_HOME}/bin/java -version 2>&1

‚≠ë‚≠ë‚≠ë Idea
echoDirNameIn IDEA_HOME
(($#IDEA_JDK)) && echoDirNameIn IDEA_JDK


#
# Fix PATH and CLASSPATH
#

‚≠ë‚≠ë‚≠ë Paths
replaceInList PATH      'idea[0-9]*'      ${IDEA_HOME}/bin
replaceInList PATH      'java-[0-9]+-jdk' ${JAVA_HOME}/bin
replaceInList CLASSPATH 'java-[0-9]+-jdk' ${JAVA_HOME}/lib/\*

if [[ "$GW_PL_NUM" -lt 9 ]]; then
  replaceInList PATH      ant $ANT_HOME/bin
  replaceInList CLASSPATH ant $ANT_HOME/lib/\*

  replaceInList PATH      aardvark $AARDVARK_HOME/bin
  replaceInList CLASSPATH aardvark $AARDVARK_HOME/lib/\*

  replaceInList PATH      maven ${M2_HOME}/bin
  replaceInList CLASSPATH maven ${M2_HOME}/lib/\*

  # shellcheck disable=SC2153 # possible misspelling
  if (($#GW_LIB_DIR)); then
    echoDirNameIn GW_LIB_DIR
    [[ -d ../"$GW_LIB_DIR" ]] && CLASSPATH+=:${PWD%/*}/"$GW_LIB_DIR"/\*
  fi
fi

typeset -p PATH CLASSPATH


if (($#GW_PL_VERSION)); then
  ‚≠ë‚≠ë‚≠ë Other Vars

  # If these are empty, default them
  [[ -f ./gwb ]] && export GW_START_SCRIPT=${:-./gwb}
  echoDirNameIn GW_START_SCRIPT

  if ((! $#GW_DB_DIR)); then
    [[ -d ./h2 ]] && GW_DB_DIR=./h2 || GW_DB_DIR=-/tmp/guidewire/${GW_PLATFORM}
  fi
  export GW_DB_DIR

  echoDirNameIn --allow-empty GW_DB_DIR

  # APIBreakTest
  export apiBreakTest_fix=true
  typeset -p apiBreakTest_fix

  export apiBreakTest_dump_dir=${TEMP}/gwdumpCache
  export apiBreakTest_localDumpPath=${HOME}/gw/dumps
  echoDirNameIn --allow-empty apiBreakTest_dump_dir apiBreakTest_localDumpPath
fi