#!/bin/bash

# case $PWD in
#     */carbon/*)
#         export GW_PLATFORM=carbon
#         ;;
#     */diamond/*)
#         export GW_PLATFORM=diamond
#         ;;
#     */emerald/*)
#         export GW_PLATFORM=emerald
#         ;;
#     */ferrite/*)
#         export GW_PLATFORM=ferrite
#         ;;
#     *)
#         echo "Could not determine platform version!" >&2
#         exit 1
#         ;;
# esac

# export GW_PRODUCT=`echo $PWD | sed "s_^.*/${GW_PLATFORM}/\([^/]*\).*_\1_"`

# # take the uppercase of the first char
# export GW_PL=`echo $GW_PLATFORM | sed 's/\(.\).*/\U\1/'`
# export TITLE="$GW_PL:$GW_PRODUCT"

case `uname` in
    CYGWIN*)
        _script_extension=.bat
        ;;
    *)
        if [ $GW_PLATFORM = "ferrite" ]; then
            _script_extension=
        else
            _script_extension=.sh
        fi
        ;;
esac

export GW_START_SCRIPT=./gwb
case $GW_PLATFORM in
    carbon)
        export GW_START_SCRIPT=bin/$GW_PRODUCT${_script_extension}
        export IDEA_HOME=$IDEA11_HOME
        export JAVA_HOME=$JAVA6_HOME
        ;;
    diamond)
        export GW_START_SCRIPT=bin/$GW_PRODUCT${_script_extension}
        export IDEA_HOME=$IDEA12_HOME
        export JAVA_HOME=$JAVA6_HOME
        ;;
    emerald)
        export GW_START_SCRIPT=bin/$GW_PRODUCT${_script_extension}
        export IDEA_HOME=$IDEA12_HOME
        export JAVA_HOME=$JAVA7_HOME
        ;;
    ferrite)
        export IDEA_HOME=$IDEA15_HOME
        export JAVA_HOME=$JAVA8_HOME
        ;;
    *)
        echo "Could not determine platform version!" >&2
        exit 1
        ;;
esac


_lib_jars='./lib/*jar'
CLASSPATH=$JAVA_HOME/lib/\*jar:${CLASSPATH%:$_lib_jars}:$_lib_jars

typeset -p AARDVARK_HOME ANT_HOME M2_HOME IDEA_HOME JAVA_HOME
echo

export PATH=${JAVA_HOME}/bin:${IDEA_HOME}/bin:${PATH}

java -version

case $GW_PRODUCT in
    ab)
        # bright white text on aqua
        $ifCygwin export GW_COLOR=3F
        ;;
    bc)
        # bright white text on red
        $ifCygwin export GW_COLOR=2F
        ;;
    cc)
        # bright white text on blue
        $ifCygwin export GW_COLOR=1F
        ;;
    pc)
        # bright white text on red
        e$ifCygwin xport GW_COLOR=4F
        ;;
    *)
        $ifCygwin export GW_COLOR=0F
        ;;
esac

$ifCygwin typeset -p GW_COLOR
typeset -p GW_PL GW_PLATFORM GW_PRODUCT GW_START_SCRIPT GW_TITLE

function echoList() {
    for arg in $*; do
        echo -e "\n$arg contains:"
        eval echo \${${arg}} | tr ':' '\n' | cat -n
    done
}

echoList PATH CLASSPATH
