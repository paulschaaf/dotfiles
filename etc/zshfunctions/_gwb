#compdef gwb
# This file was generated using 'extractCompdef /Users/pschaaf/bin/gwb'

_arguments "*: :((
  '--debug'
  '--delay: Sleep for the specified number of seconds (the default)'
  '--dry-run: Print the commands that will be run, but do not actually run them'
  '--log: Log session to gwb_\\\$(date \"+%Y.%m.%d-%H.%M.%S\").log'
  '--nice: Run the command with the specified niceness'
  '--setx: run \"set -x\" upon parsing this switch'
  '--wc: Pipe the command output through wc'
  'backupDb: (optionally specify comment) creates backup named \\\$(date \"+\\\${dbbackup}\\\${comment}_%H:%M:%S\")'
  'clean: Deletes the build directory'
  'cleanIdea: Deletes the Studio project'
  'cleanNuke: git clean -dxf -- remove untracked directories, files, and ignores'
  'codegen'
  'compile'
  'dropDb'
  'editDisplayKey: Edit display.properties in a plain (non-studio) IntelliJ Idea'
  'fixgwb: Remove the erroneous spaces from the OOB product gwb script'
  'fixPuml: Remove the cruft (internal classes, DYNPROPs, Bean-level properties, etc. from the file'
  'fixRunConfigs: Replaces the literal port numbers with env var references in each of the .idea/runConfigurations'
  'genDataDictionary: in the relative path build/XX/dictionary'
  'genPcfDictionary: gen document of each pcf element in build/pcf.xml'
  'genPcfXsd'
  'genSystemData: Compile files from system_data.xml -- for pre-Mammoth builds'
  'genTypeInfo: OBSOLETE as of Mammoth -- Generate .gti files'
  'genWsdl'
  'genWsiLocal'
  'h2: Open the H2 console'
  'http: Start a simple http server in the resources directory'
  'idea: Generate Studio project'
  'ij: Start the appropriate intellij'
  'killH2: Kill the H2 server on port \\\$((defaultRunPort + 2))'
  'killHttp: Kill the simple http server in the resources directory'
  'killPort: Kill the process that is holding the specified port, or \\\$GW_PORT if none is specified'
  'killServer: Kill the server process on \\\$GW_PORT_DEBUG'
  'killStudio: Kill the studio whose sdkroot is pwd'
  'lsApd: List the files that \"wipeApd\" would delete'
  'lsDb: List the contents of the database directory'
  'lsplugins: List all of the user IntelliJ plugins'
  'lsport: List processes holding the specified port'
  'opendd: Open the data dictionary'
  'packageCustomerDist: Generate a customer build zip of this code'
  'pcfs: (optional host:port#) Browse the most recently changed file named /tmp/*.html'
  'pgrepServer: Is the server process running?'
  'pgrepStudio: Is studio running?'
  'restoreDb: Restore the database file named in the argument'
  'rmDb: Forcibly delete the files in GW_DB_DIR'
  'scratchReport: Generate scratch suite entries for tests in the current working set'
  'setBg: Set the background image in iTerm'
  'setPlVersion: Set the platform version in gradle.properties'
  'stop: Stop Gradle daemon'
  'studio: Add --no-scan to skip publishing the build scan'
  'tasks: List the tasks understood by the GW ./gwb'
  'testFail: Perform a test that automatically fails. Useful for testing'
  'testPass: Perform a test that automatically succeeds. Useful for testing'
  'triggerTests: dummy change to force TC to re-run tests'
  'wc: count all lines of code excluding generated files and tests'
  'wipeApd: remove the generated APD files'
  'www: Open a browser on the server process'
))"
