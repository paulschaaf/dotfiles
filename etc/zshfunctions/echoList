#!/bin/zsh

local listName=$1; shift
eval local contents=\$${listName}

local ifDebug=:
local show_type=''
local rm_row=
local RS=${RS:-:}

while [[ -n "$*" ]]; do
    case $1 in
        --debug)
            ifDebug=
            shift
            ;;
        --help)
            echo '--help       Show this screen'
            echo '--show-type  Shows the type of the argument files'
            echo '--rm \#      Removes item number # from the list and print the new value'
            return
            ;;
        --rm)
            shift
            rm_row=$1
            shift
           ;;
        --show-type)
            show_type='file -L'
            shift
            ;;
       --*)
            echo Unrecognized option "$1"!
            return 1
            ;;
        *)
            break
            ;;
    esac
done

$ifDebug echo '=====' "listName=$listName"
$ifDebug echo '=====' "contents=$contents"

$ifZsh echo " ${listName} has type ${(Pt)listName}"

# let us know if it's also a function or alias
local override=`type $1`
override=${override//$1 is \/*/} # it's neither
override=${override//not found/is not an alias, function or executable}

echo -E ${contents} | awk '
NR == 1 {split(file, files, " ")}
{
  gsub("/c" ENVIRON["HOME"],"~")
  gsub(ENVIRON["HOME"],"~")
  dirname = $0
  carat = " "
  startColor = ""
  endColor = "[0m"
  for (idx in files) {  # note if any of the argument files are in this dir
    fullpath = $1 "/" files[idx]
    if (! system("test -f " fullpath)) {
        startColor = "[1;33m"
        matches = matches " " fullpath
        carat=">"
        break
    }
  }
  if (NR == rm_row) {
      startColor = sprintf("%s", "[101m")
  }
  printf("\n%s%2d %s%s%s", carat, NR, startColor, dirname, endColor)
}
END {
    if (override) {
        print "\n" override
    }
    if (matches) {
        print "\n" ls matches
        system(ls matches)
        if (show_type) {
            print "\n" show_type matches "\n"
            system(show_type matches)
        }
    }
}' RS=${RS} file="${*}" ls="/bin/ls \${LS_FLAGS} -Hl" override=$override rm_row="${rm_row:-999}" show_type=${show_type}

if [[ -n $rm_row ]]; then
    contents=`echo ${contents} | awk 'NR != RM_ROW {print}' RM_ROW=$rm_row RS=${RS} ORS=${RS}`
    eval $listName=$contents # update the var
    echo "\n"Removed row $rm_row from $listName
    $ifDebug echo '=====' "listName=$listName"
    $ifDebug echo '=====' "contents=$contents"
fi

[[ $# -lt 2 ]] && return

shift
echo "\nIgnored extra arguments: '$*'!"
return 1
